//Adafruit 128x32 OLED display based on SSD1306 drivers
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

//Wiring:
//OLED - Arduino
//VCC - 5V
//GND - GND
//SCL - A5
//SDA - A4

const int SIZE_3_FONT_WIDTH = 9;
const int SIZE_2_FONT_WIDTH = 7;
const int SCREEN_WIDTH = 128; // OLED display width, in pixels
const int SCREEN_HEIGHT = 32; // OLED display height, in pixels
const int OLED_RESET = -1; // Reset pin # (or -1 if sharing Arduino reset pin)
const int SCREEN_ADDRESS = 0x3C; //I2C address of OLED display

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const unsigned char Logo [] PROGMEM = {
	// 'Logo, 128x32px
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xe0, 0x7c, 0x1f, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x07, 0xf0, 0xfe, 0x1f, 0xe0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x0e, 0x31, 0xc7, 0x1c, 0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x1c, 0x13, 0x83, 0x9c, 0x38, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 
	0x18, 0x03, 0x01, 0x9c, 0x18, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 
	0x18, 0x03, 0x01, 0x9c, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x60, 0x00, 0x00, 0x00, 
	0x18, 0x03, 0x01, 0x9c, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xff, 0xf0, 0x00, 0x00, 0x00, 
	0x18, 0x03, 0x01, 0x9c, 0x18, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x01, 0xc0, 0x00, 
	0x1c, 0x13, 0x83, 0x9c, 0x38, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xf0, 0x01, 0xe0, 0x00, 
	0x0e, 0x31, 0xc7, 0x1c, 0x70, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xe0, 0x43, 0xe1, 0x00, 
	0x0f, 0xf0, 0xfe, 0x1f, 0xe0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc3, 0xf0, 0xff, 0xff, 0x80, 
	0x03, 0xe0, 0x7c, 0x1f, 0xc0, 0xff, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x81, 0xfd, 0xff, 0xff, 0xc0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0xfe, 0xff, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0xfe, 0x7f, 0xff, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0xf0, 0x3c, 0x1f, 0xc0, 0x00, 0x00, 0x7f, 0x00, 0xfe, 0xfc, 0x1f, 0x80, 
	0x00, 0x00, 0x00, 0x03, 0xf8, 0x3c, 0x1f, 0xe0, 0x00, 0x00, 0x7f, 0x00, 0xf8, 0xf8, 0x0f, 0x80, 
	0x00, 0x00, 0x00, 0x07, 0x18, 0x3c, 0x1c, 0x30, 0x00, 0x00, 0x1f, 0x81, 0xf7, 0xf8, 0x0f, 0xf0, 
	0x00, 0x00, 0x00, 0x0e, 0x08, 0x7e, 0x1c, 0x30, 0x00, 0x00, 0x0f, 0xc3, 0xf7, 0xf0, 0x07, 0xf0, 
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x66, 0x1c, 0x30, 0x00, 0x00, 0x07, 0xff, 0xf7, 0xf0, 0x07, 0xf0, 
	0x00, 0x00, 0x00, 0x0c, 0x00, 0xe7, 0x1c, 0x70, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x07, 0xf0, 
	0x00, 0x00, 0x00, 0x0c, 0x00, 0xe7, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xff, 0xf8, 0xf8, 0x0f, 0x80, 
	0x00, 0x00, 0x00, 0x0c, 0x00, 0xc3, 0x1f, 0xc0, 0x00, 0x00, 0x0f, 0xff, 0x70, 0xfc, 0x1f, 0x80, 
	0x00, 0x00, 0x00, 0x0e, 0x09, 0xff, 0x9c, 0xe0, 0x00, 0x00, 0x06, 0x3e, 0x00, 0x7f, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x07, 0x19, 0xff, 0x9c, 0x70, 0x00, 0x00, 0x00, 0x1e, 0x00, 0xff, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x07, 0xf9, 0x81, 0x9c, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x01, 0xff, 0xff, 0xc0, 
	0x00, 0x00, 0x00, 0x01, 0xf3, 0x81, 0xdc, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xe1, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  while(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    delay(1000);
  }
  //Set font for display
  display.cp437(true);
  //Set text color to white     
  display.setTextColor(SSD1306_WHITE); 
}

void loop() {
  //Start waiting sequence
  displayLogo();
  displayTitle("WAITING");
  //Dummy instruction input
  displayInputScreen("", "", "");
  displayInputScreen("FORWARD", "", "");
  displayInputScreen("FORWARD", "LEFT", "");
  displayInputScreen("FORWARD", "LEFT", "RIGHT");
  //Start running sequence
  displayTitle("START");
  displayTitle("3");
  displayTitle("2");
  displayTitle("1");
  //Dummy instruction output
  updateRunningScreen("FORWARD", 1, 3);
  updateRunningScreen("LEFT"   , 2, 3);
  updateRunningScreen("RIGHT"  , 3, 3);
  //Finished
  displayTitle("FINISH");
}

void updateRunningScreen(String currentInstruction, int instructionNumber, int totalInstructions) {
  //Set up display
  display.clearDisplay();
  display.setTextSize(2);
  //Line 1 & 2
  String instructionNumberText = String(instructionNumber) + " / " + String(totalInstructions);
  display.setCursor(SCREEN_WIDTH / 2 - SIZE_2_FONT_WIDTH * instructionNumberText.length(), 0);
  display.println(instructionNumberText);
  //Line 3 & 4
  display.setCursor(SCREEN_WIDTH / 2 - SIZE_2_FONT_WIDTH * currentInstruction.length(), 16);
  display.println(currentInstruction);
  //Draw changes
  display.display();
  delay(2000);
}
void displayInputScreen(String input1, String input2, String input3) {
  //Set up display
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  //Write text
  display.println("INPUTS");
  display.println(input1);
  display.println(input2);
  display.println(input3);
  //Draw changes
  display.display();
  delay(1000);
}
void displayTitle(String title) {
  //Set up display
  display.clearDisplay();
  display.setTextSize(3);
  //Write text
  display.setCursor(64 - SIZE_3_FONT_WIDTH * title.length(),6);
  display.println(title);
  //Draw changes
  display.display();
  delay(2000);
}
void displayLogo(void) {
  //Set up display
  display.clearDisplay();
  //Write bitmap image
  display.drawBitmap(0, 0, Logo, SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE);
  //Draw changes
  display.display();
  delay(2000);
}